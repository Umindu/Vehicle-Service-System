/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Home;

import DBConnect.DBconnect;
import Manage.Manage;
import Vehicles.Vehicles;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.EncodeHintType;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.border.MatteBorder;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import net.miginfocom.swing.MigLayout;

/**
 *
 * @author Umindu
 */
public class Home extends javax.swing.JInternalFrame {

    /**
     * Creates new form Home
     */
    
    private DefaultListModel ListModel;
    
    private Home home;
    
    private ImageIcon qrImg; 

    
    ArrayList<ArrayList<String> > allServicesList =  new ArrayList<ArrayList<String> >(); 
    ArrayList<ArrayList<String> > allProductList =  new ArrayList<ArrayList<String> >();
    
    public Home() {
        initComponents();
        
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
        
        sidePanel.setBorder(new MatteBorder(0, 10, 0, 0, new Color(242,242,242)));
        
        // add data Vehical Type ComboBox
        try {
            VehicleTypeComboBox.removeAllItems();
            Statement statement = DBconnect.connectToDB().createStatement();
            statement.execute("Select Name From VehicleType");
            ResultSet resultSet = statement.getResultSet(); 
            while(resultSet.next()){
                VehicleTypeComboBox.addItem(resultSet.getString("Name"));
            }
            VehicleTypeComboBox.addItem("Other");
        } catch (SQLException ex) {
            Logger.getLogger(Manage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //set invoice number
        setInvoiceNo();
        
        //search menu
        searchMenu.add(searchPanel);
        ListModel = new DefaultListModel();
        searchPanelList.setModel(ListModel);
        
        serAndProPanel.setLayout(new MigLayout("inset 0, fillx, wrap", "[fill]"));
        
        showDate();
        showTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        searchPanelList = new javax.swing.JList<>();
        searchMenu = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dateLable = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        progressButton = new button.MyButton();
        sidePanel = new javax.swing.JPanel();
        invoiceSearch = new fosalgo.FTextField();
        invoiceNoLable = new javax.swing.JLabel();
        progressButton1 = new button.MyButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        serAndProPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        fTextField1 = new fosalgo.FTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        ownerPhone = new fosalgo.FTextField();
        invoiceNo = new fosalgo.FTextField();
        ownerName = new fosalgo.FTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new CustomComponents.MyTextArea();
        VehicleRegNo = new fosalgo.FTextField();
        VehicleTypeComboBox = new CustomComponents.Combobox();
        timeLabel = new javax.swing.JLabel();
        cancelButton = new button.MyButton();
        qrCode = new javax.swing.JLabel();

        searchPanelList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchPanelList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchPanelListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(searchPanelList);

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
        );

        searchMenu.setFocusable(false);

        setBorder(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(242, 242, 242), 10));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Invoice No : ");

        dateLable.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        dateLable.setText("Date : 2023-04-03  ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setText("Vehicle Registration No :");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setText("Owner Name :");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel5.setText("Description :");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel6.setText("Vehicle Type :");

        progressButton.setBackground(new java.awt.Color(184, 248, 250));
        progressButton.setText("Add Process");
        progressButton.setBorderColor(new java.awt.Color(13, 180, 185));
        progressButton.setBorderPainted(false);
        progressButton.setColor(new java.awt.Color(184, 248, 250));
        progressButton.setColorClick(new java.awt.Color(126, 240, 244));
        progressButton.setColorOver(new java.awt.Color(126, 240, 244));
        progressButton.setFocusPainted(false);
        progressButton.setFocusable(false);
        progressButton.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        progressButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        progressButton.setRadius(20);
        progressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                progressButtonActionPerformed(evt);
            }
        });

        sidePanel.setBackground(new java.awt.Color(255, 255, 255));

        invoiceSearch.setToolTipText("");
        invoiceSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        invoiceSearch.setRadius(20);
        invoiceSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                invoiceSearchKeyReleased(evt);
            }
        });

        invoiceNoLable.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        invoiceNoLable.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        invoiceNoLable.setText("Invoice No");
        invoiceNoLable.setToolTipText("");
        invoiceNoLable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        progressButton1.setForeground(new java.awt.Color(255, 255, 255));
        progressButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/angle-right.png"))); // NOI18N
        progressButton1.setText("Continue");
        progressButton1.setBorderColor(new java.awt.Color(13, 180, 185));
        progressButton1.setBorderPainted(false);
        progressButton1.setColor(new java.awt.Color(13, 180, 185));
        progressButton1.setColorClick(new java.awt.Color(11, 140, 144));
        progressButton1.setColorOver(new java.awt.Color(11, 140, 144));
        progressButton1.setFocusPainted(false);
        progressButton1.setFocusable(false);
        progressButton1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        progressButton1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        progressButton1.setIconTextGap(30);
        progressButton1.setRadius(20);

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(null);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        serAndProPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));

        javax.swing.GroupLayout serAndProPanelLayout = new javax.swing.GroupLayout(serAndProPanel);
        serAndProPanel.setLayout(serAndProPanelLayout);
        serAndProPanelLayout.setHorizontalGroup(
            serAndProPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 418, Short.MAX_VALUE)
        );
        serAndProPanelLayout.setVerticalGroup(
            serAndProPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(serAndProPanel);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Rs. 0.00");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel11.setText("Payabel Amount :");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setText("Discount :");

        fTextField1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fTextField1.setRadius(15);
        fTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(progressButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidePanelLayout.createSequentialGroup()
                        .addComponent(invoiceSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(invoiceNoLable, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidePanelLayout.createSequentialGroup()
                        .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invoiceSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoiceNoLable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(fTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(progressButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel7.setText("Phone No: ");

        ownerPhone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ownerPhone.setRadius(20);

        invoiceNo.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        invoiceNo.setFocusable(false);
        invoiceNo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        invoiceNo.setRadius(20);

        ownerName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ownerName.setRadius(20);

        jScrollPane1.setBorder(null);

        description.setColumns(20);
        description.setRows(5);
        description.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        description.setRadius(20);
        jScrollPane1.setViewportView(description);

        VehicleRegNo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        VehicleRegNo.setRadius(20);
        VehicleRegNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                VehicleRegNoKeyReleased(evt);
            }
        });

        VehicleTypeComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        VehicleTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VehicleTypeComboBoxActionPerformed(evt);
            }
        });

        timeLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        timeLabel.setText("Time : 12:45");

        cancelButton.setText("Cancel");
        cancelButton.setBorderColor(new java.awt.Color(13, 180, 185));
        cancelButton.setBorderPainted(false);
        cancelButton.setColorClick(new java.awt.Color(126, 240, 244));
        cancelButton.setColorOver(new java.awt.Color(126, 240, 244));
        cancelButton.setFocusPainted(false);
        cancelButton.setFocusable(false);
        cancelButton.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        cancelButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        cancelButton.setRadius(20);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 283, Short.MAX_VALUE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(progressButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(VehicleTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(ownerName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                                .addComponent(ownerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(VehicleRegNo, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(qrCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(invoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dateLable)
                        .addGap(27, 27, 27)
                        .addComponent(timeLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(invoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dateLable)
                        .addComponent(timeLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VehicleRegNo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ownerName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ownerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(VehicleTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(qrCode, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(progressButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(sidePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void setObject(Home home){
        this.home = home;
    }
    
    public void showDate(){
        SimpleDateFormat fdate = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();
        dateLable.setText("Date - "+fdate.format(date));
    }
    
    public void showTime(){
        new Timer(0, new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                SimpleDateFormat ftime = new SimpleDateFormat("hh:mm:ss a");
                Date time = new Date();
                timeLabel.setText(ftime.format(time));
            }
        }).start();
    }
    
    public void generateQRCode(){
        OldQRimageDelete();
        
        try {
            String qrText = invoiceNo.getText() + "," + VehicleRegNo.getText();
            String imgPath = System.getProperty("user.dir")+"/QR/";
            String charset = "UTF-8";
            Map<EncodeHintType, ErrorCorrectionLevel> hashMap = new HashMap<EncodeHintType, ErrorCorrectionLevel>();
            hashMap.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);
            generateQRcode(qrText, imgPath+qrText+".png", charset, hashMap, 250, 250);
            qrImg = new ImageIcon("QR/"+qrText+".png");
            qrCode.setIcon(qrImg);
        } catch (WriterException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void OldQRimageDelete(){
        File file =  new File(System.getProperty("user.dir")+"/QR/");
        String[] S= file.list();
        for(String ss : S){
            File f1 = new File(file, ss);
            f1.delete();
        }
    }
    
    public void generateQRcode(String data, String path, String charset, Map map, int h, int w) throws WriterException, IOException {
        BitMatrix matrix = new MultiFormatWriter().encode(new String(data.getBytes(charset), charset), BarcodeFormat.QR_CODE, w, h);
        MatrixToImageWriter.writeToFile(matrix, path.substring(path.lastIndexOf('.') + 1), new File(path));
    } 
    
    public void RefrashSerAndProPanel(){
        serAndProPanel.removeAll();
        for (int i = 0; i < allServicesList.size(); i++) {
            String name = allServicesList.get(i).get(0);
            String charge = allServicesList.get(i).get(1);
            serAndProPanel.add(new ServiceChargeItem(home, name, charge));  
            
            for (int j = 0; j < allProductList.size(); j++) {
                if(allProductList.get(j).get(5).equals(name)){
                    String id = allProductList.get(i).get(0);
                    String proname = allProductList.get(i).get(1);
                    float price = Float.parseFloat(allProductList.get(i).get(2));
                    float qnt = Float.parseFloat(allProductList.get(i).get(3));
                    float total = Float.parseFloat(allProductList.get(i).get(4));
                    serAndProPanel.add(new ProductItem(home, id, proname, price, qnt, total));  
                }
            } 
        } 
        
        //productListPanel refresh
        serAndProPanel.invalidate();
        serAndProPanel.validate();
        serAndProPanel.repaint();
    }
    

    private void setInvoiceNo(){
        //set invoice number
        try {
            Statement statement = DBconnect.connectToDB().createStatement();
            statement.execute("SELECT MAX(COALESCE(InvoiceNo, 0)) AS largest_value FROM VehicleDetails");
            ResultSet resultSet = statement.getResultSet();
                if (resultSet.next()) {
                    int maxInvoiceID = resultSet.getInt(1);
                    if (resultSet.wasNull()) {
                        invoiceNo.setText("1");
                    } else {
                        invoiceNo.setText(String.valueOf(maxInvoiceID + 1));
                    }
                }
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void fTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fTextField1ActionPerformed

    private void VehicleTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VehicleTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VehicleTypeComboBoxActionPerformed

    private void progressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_progressButtonActionPerformed
        // TODO add your handling code here:
        Date currentDate = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String formattedDate = dateFormat.format(currentDate);
        
        String Vehicleregno = VehicleRegNo.getText();
        String ownername = ownerName.getText();
        String ownerphone = ownerPhone.getText();
        String Vehicletype = VehicleTypeComboBox.getSelectedItem().toString();
        String descriptions = description.getText();
        try {
            Statement statement = DBconnect.connectToDB().createStatement();
            statement.execute("INSERT INTO VehicleDetails (Date, VehicleNo, OwnerName, Phone, VehicleType, States, Description) VALUES('" + formattedDate + "', '" + Vehicleregno + "', '" + ownername + "', '" + ownerphone + "', '" + Vehicletype + "', 'Processing', '"+ descriptions +"')");
            System.out.println("Vehicle added successfully");
            
            VehicleRegNo.setText("");
            ownerName.setText("");
            ownerPhone.setText("");
            description.setText("");
            VehicleTypeComboBox.setSelectedIndex(0);
            
            setInvoiceNo();
        } catch (SQLException ex) {
            Logger.getLogger(Manage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Vehicle add unsuccessful !, try again ");
        }
    }//GEN-LAST:event_progressButtonActionPerformed

    private void VehicleRegNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VehicleRegNoKeyReleased
        // TODO add your handling code here:
        generateQRCode();
        
        String text = VehicleRegNo.getText();
        char lastLetter = text.charAt(text.length() - 1);
        if(lastLetter >= '0' && lastLetter <= '9'){
            if(!VehicleRegNo.getText().contains("-")){
                VehicleRegNo.setText(VehicleRegNo.getText().substring(0, VehicleRegNo.getText().length()-1) + '-' + lastLetter);
            }
        }
        
    }//GEN-LAST:event_VehicleRegNoKeyReleased

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        VehicleRegNo.setText("");
        ownerName.setText("");
        ownerPhone.setText("");
        description.setText("");
        VehicleTypeComboBox.setSelectedIndex(0);
        
        setInvoiceNo();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void searchPanelListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchPanelListMouseClicked
        // TODO add your handling code here:
        invoiceNoLable.setText("#"+searchPanelList.getSelectedValue());
        try {
            Statement statement = DBconnect.connectToDB().createStatement();
            statement.execute("SELECT * FROM ServiceCharges WHERE InvoiceID = '"+ searchPanelList.getSelectedValue() +"'");
            ResultSet resultSet = statement.getResultSet();
            while(resultSet.next()){
                ArrayList<String> serviceList =  new ArrayList<String>();
                serviceList.add(resultSet.getString("ServiceUnit"));
                serviceList.add(resultSet.getString("ServiceCharge"));
                allServicesList.add(serviceList);
            }
            for(int i=0; i < allServicesList.size(); i++){
                String serUnit = allServicesList.get(i).get(0);
                Statement statement2 = DBconnect.connectToDB().createStatement();
                statement2.execute("SELECT * FROM SoldProducts WHERE InvoiceID = '"+ searchPanelList.getSelectedValue() +"' AND ServiceUnit = '"+ serUnit +"'");
                ResultSet resultSetProducts = statement2.getResultSet();
                while(resultSetProducts.next()){
                    ArrayList<String> productList =  new ArrayList<String>();
                    productList.add(resultSetProducts.getString("ProductID"));
                    productList.add(resultSetProducts.getString("Name"));
                    productList.add(resultSetProducts.getString("Price"));
                    productList.add(resultSetProducts.getString("Qnt"));
                    productList.add(resultSetProducts.getString("Total"));
                    productList.add(resultSetProducts.getString("ServiceUnit"));
                    allProductList.add(productList);
                }
            }
            RefrashSerAndProPanel();
            System.out.println(allServicesList);
            System.out.println(allProductList);
        } catch (SQLException ex) {
            Logger.getLogger(Vehicles.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        searchMenu.setVisible(false);
        invoiceSearch.setText("");
    }//GEN-LAST:event_searchPanelListMouseClicked

    private void invoiceSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoiceSearchKeyReleased
        // TODO add your handling code here:
        allServicesList.clear();
        allProductList.clear();
        serAndProPanel.removeAll();
        String search = invoiceSearch.getText().trim();
        if(!search.equals("")){
            ListModel.removeAllElements();
            try {
                Statement statement = DBconnect.connectToDB().createStatement();
                statement.execute("SELECT InvoiceNo FROM VehicleDetails WHERE InvoiceNo LIKE '%"+search+"%' AND States = 'Processing'");
                ResultSet resultSet = statement.getResultSet(); 
                if(resultSet.next()){
                    searchMenu.show(invoiceSearch, 0, invoiceSearch.getHeight());
                    searchMenu.setPopupSize(170, 170);
                    ListModel.addElement(resultSet.getString("InvoiceNo"));
                }else{
                    searchMenu.setVisible(false);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Vehicles.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            searchMenu.setVisible(false);
        }
    }//GEN-LAST:event_invoiceSearchKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private fosalgo.FTextField VehicleRegNo;
    private CustomComponents.Combobox VehicleTypeComboBox;
    private button.MyButton cancelButton;
    private javax.swing.JLabel dateLable;
    private CustomComponents.MyTextArea description;
    private fosalgo.FTextField fTextField1;
    private fosalgo.FTextField invoiceNo;
    private javax.swing.JLabel invoiceNoLable;
    private fosalgo.FTextField invoiceSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private fosalgo.FTextField ownerName;
    private fosalgo.FTextField ownerPhone;
    private button.MyButton progressButton;
    private button.MyButton progressButton1;
    private javax.swing.JLabel qrCode;
    private javax.swing.JPopupMenu searchMenu;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JList<String> searchPanelList;
    private javax.swing.JPanel serAndProPanel;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables
}
