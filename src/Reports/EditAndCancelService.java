/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Reports;

import DBConnect.DBconnect;
import Login.Login;
import Payments.Payments;
import Reports.Templates.ProductItem;
import Reports.Templates.ServiceChargeItem;
import Vehicles.Vehicles;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.miginfocom.swing.MigLayout;

/**
 *
 * @author Umindu
 */
public class EditAndCancelService extends javax.swing.JFrame {

    /**
     * Creates new form CancelService
     */
    
    ArrayList<ArrayList<String> > allServicesList =  new ArrayList<ArrayList<String> >(); 
    ArrayList<ArrayList<String> > allProductList =  new ArrayList<ArrayList<String> >();
    ArrayList<String> removeProductList =  new ArrayList<String>();
    ArrayList<String> removeServiceList =  new ArrayList<String>();
    
    private String ActionType;
    private String TableType;
    
    private EditAndCancelService editAndCancelService;
    
    private Reports reports;
    
    public EditAndCancelService(int invoiceID, String TableType, String ActionType) { 
        setUndecorated(true);
        initComponents();
        
        this.ActionType = ActionType;
        this.TableType = TableType;
        
        if(ActionType == "Cancel"){
            ActionButton.setText("Service Cancel");
        }
        
        //close window
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        try {
            Statement statement = DBconnect.connectToDB().createStatement();
            statement.execute("SELECT * FROM VehicleDetails WHERE InvoiceNo = '"+invoiceID+"'");
            ResultSet resultSet = statement.getResultSet();
            
            if(resultSet.next()){
                invoiceNo.setText(String.valueOf(invoiceID));
                VehicleRegNo.setText(resultSet.getString("VehicleNo"));
                ownerName.setText(resultSet.getString("OwnerName"));
                ownerPhone.setText(resultSet.getString("Phone"));
                vehicleType.setText(resultSet.getString("VehicleType"));
                description.setText(resultSet.getString("Description"));
                
                Date date = resultSet.getDate("Date");
                dateLable.setText("Date : "+date);
                
                Date time = resultSet.getTime("Date");
                timeLabel.setText("Time : "+time);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(EditAndCancelService.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        serAndProPanel4.setLayout(new MigLayout("inset 0, fillx, wrap", "[fill]"));
        
    }

    private EditAndCancelService() {
        setUndecorated(true);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ownerName = new fosalgo.FTextField();
        dateLable = new javax.swing.JLabel();
        VehicleRegNo = new fosalgo.FTextField();
        jLabel7 = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        DepSerCancelButton1 = new button.MyButton();
        invoiceNo = new fosalgo.FTextField();
        jLabel6 = new javax.swing.JLabel();
        ownerPhone = new fosalgo.FTextField();
        ActionButton = new button.MyButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new CustomComponents.MyTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        serAndProPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        vehicleType = new fosalgo.FTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 204, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        ownerName.setFocusable(false);
        ownerName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ownerName.setRadius(20);

        dateLable.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        dateLable.setText("Date : 2023-04-03  ");

        VehicleRegNo.setFocusable(false);
        VehicleRegNo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        VehicleRegNo.setRadius(20);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel7.setText("Phone No: ");

        timeLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        timeLabel.setText("Time : 12:45");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel5.setText("Description :");

        DepSerCancelButton1.setText("Cancel");
        DepSerCancelButton1.setBorderColor(new java.awt.Color(13, 180, 185));
        DepSerCancelButton1.setBorderPainted(false);
        DepSerCancelButton1.setColorClick(new java.awt.Color(184, 248, 250));
        DepSerCancelButton1.setColorOver(new java.awt.Color(184, 248, 250));
        DepSerCancelButton1.setFocusPainted(false);
        DepSerCancelButton1.setFocusable(false);
        DepSerCancelButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        DepSerCancelButton1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        DepSerCancelButton1.setRadius(20);
        DepSerCancelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DepSerCancelButton1ActionPerformed(evt);
            }
        });

        invoiceNo.setFocusable(false);
        invoiceNo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        invoiceNo.setRadius(20);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel6.setText("Vehicle Type :");

        ownerPhone.setFocusable(false);
        ownerPhone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ownerPhone.setRadius(20);

        ActionButton.setText("Service Update");
        ActionButton.setBorderColor(new java.awt.Color(13, 180, 185));
        ActionButton.setBorderPainted(false);
        ActionButton.setColor(new java.awt.Color(184, 248, 250));
        ActionButton.setColorClick(new java.awt.Color(126, 240, 244));
        ActionButton.setColorOver(new java.awt.Color(126, 240, 244));
        ActionButton.setFocusPainted(false);
        ActionButton.setFocusable(false);
        ActionButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ActionButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        ActionButton.setRadius(20);
        ActionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActionButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(null);

        description.setColumns(20);
        description.setRows(5);
        description.setFocusable(false);
        description.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        description.setRadius(20);
        jScrollPane1.setViewportView(description);

        jScrollPane6.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane6.setBorder(null);
        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane6.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        serAndProPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));

        javax.swing.GroupLayout serAndProPanel4Layout = new javax.swing.GroupLayout(serAndProPanel4);
        serAndProPanel4.setLayout(serAndProPanel4Layout);
        serAndProPanel4Layout.setHorizontalGroup(
            serAndProPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 418, Short.MAX_VALUE)
        );
        serAndProPanel4Layout.setVerticalGroup(
            serAndProPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 459, Short.MAX_VALUE)
        );

        jScrollPane6.setViewportView(serAndProPanel4);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setText("Vehicle Registration No :");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Invoice No : ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setText("Owner Name :");

        vehicleType.setFocusable(false);
        vehicleType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        vehicleType.setRadius(20);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(invoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dateLable)
                        .addGap(27, 27, 27)
                        .addComponent(timeLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(DepSerCancelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ActionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(ownerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ownerName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(vehicleType, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(VehicleRegNo, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(invoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLable)
                    .addComponent(timeLabel))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(VehicleRegNo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ownerName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ownerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vehicleType, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ActionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DepSerCancelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ActionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActionButtonActionPerformed
        // TODO add your handling code here:
        if(ActionType == "Cancel"){
            int result = JOptionPane.showConfirmDialog(null,"Sure? Cancel this service?", "Cancel Service", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(result == JOptionPane.YES_OPTION){
                try {
                    Statement statement = DBconnect.connectToDB().createStatement();
                    statement.execute("DELETE FROM VehicleDetails WHERE InvoiceNo = '"+ invoiceNo.getText() +"'");
                    statement.execute("DELETE FROM SoldProducts WHERE InvoiceID = '"+ invoiceNo.getText() +"'");
                    statement.execute("DELETE FROM ServiceCharges WHERE InvoiceID = '"+ invoiceNo.getText() +"'");
                } catch (SQLException ex) {
                    Logger.getLogger(EditAndCancelService.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.dispose();
                reports.LoadEnterdVehiclesTable("All");
            }
        }else{
            //removeServiceList 
            int result = JOptionPane.showConfirmDialog(null,"Sure? Update this?", "Delete", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(result == JOptionPane.YES_OPTION){
                try {
                    Statement statement = DBconnect.connectToDB().createStatement();
                    //remove services
                    if(!removeServiceList.isEmpty()){
                        for(String index : removeServiceList){
                            statement.execute("DELETE ServiceCharges WHERE InvoiceID = '"+ invoiceNo.getText() +"' AND ServiceUnit = '"+ index +"'");
                        }
                    }
                    //update service
                    if(!allServicesList.isEmpty()){
                        for(ArrayList Service : allServicesList){
                            statement.execute("UPDATE ServiceCharges SET ServiceCharge = '"+ Service.get(1) +"' WHERE InvoiceID = '"+ invoiceNo.getText() +"' AND ServiceUnit = '"+ Service.get(0) +"'");
                        }
                    }
                    //remove products
                    if(!removeProductList.isEmpty()){
                        for(String index : removeProductList){
                            statement.execute("DELETE SoldProducts WHERE InvoiceID = '"+ invoiceNo.getText() +"' AND ProductID = '"+ index +"'");
                        }
                    }
                    //update products
                    if(!allProductList.isEmpty()){
                        for(ArrayList Product : allProductList){
                            statement.execute("UPDATE SoldProducts SET Qnt = '"+ Product.get(3) +"', Total = '"+ Product.get(4) +"' WHERE InvoiceID = '"+ invoiceNo.getText() +"' AND ProductID = '"+ Product.get(0) +"'");
                        }
                    }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(EditAndCancelService.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.dispose();
                reports.LoadEnterdVehiclesTable("All");
            }
            
//            if(TableType == "Dep"){
//                Payments payments = new Payments(invoiceNo.getText() , subTotalCal, discountPercentage, discount.getText().isEmpty() ? "0" : discount.getText(), payableAmountCal);
//                payments.setLocationRelativeTo(null); 
//                payments.setExtendedState(JFrame.MAXIMIZED_BOTH);
//                payments.setBackground(new Color(0,0,0,150));
//                payments.setVisible(true);
//            }
        }
    }//GEN-LAST:event_ActionButtonActionPerformed

    private void DepSerCancelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DepSerCancelButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_DepSerCancelButton1ActionPerformed

    public void setObject(EditAndCancelService editAndCancelService1, Reports reports, int invoiceID){
        this.editAndCancelService = editAndCancelService1;
        this.reports = reports;
        LoadVehicleServiceList(invoiceID);
    }
        
    public void RefrashSerAndProPanel(int invoiceID){
        serAndProPanel4.removeAll();
        for (int i = 0; i < allServicesList.size(); i++) {
            String name = allServicesList.get(i).get(0);
            String charge = allServicesList.get(i).get(1);
            serAndProPanel4.add(new ServiceChargeItem(editAndCancelService, invoiceID, name, charge, ActionType)); 
            
            for (int j = 0; j < allProductList.size(); j++) {
                if(allProductList.get(j).get(5).equals(name)){
                    String id = allProductList.get(j).get(0);
                    String proname = allProductList.get(j).get(1);
                    float price = Float.parseFloat(allProductList.get(j).get(2));
                    float qnt = Float.parseFloat(allProductList.get(j).get(3));
                    float total = Float.parseFloat(allProductList.get(j).get(4));
                    serAndProPanel4.add(new ProductItem(editAndCancelService, invoiceID, id, proname, price, qnt, total, ActionType));  
                }
            } 
        } 
        
        //productListPanel refresh
        serAndProPanel4.invalidate();
        serAndProPanel4.validate();
        serAndProPanel4.repaint();
    }
    
    public void LoadVehicleServiceList(int invoiceID){
        allServicesList.clear();
        allProductList.clear();
        try {
            Statement statement = DBconnect.connectToDB().createStatement();
            statement.execute("SELECT * FROM ServiceCharges WHERE InvoiceID = '"+ invoiceID +"'");
            ResultSet resultSet = statement.getResultSet();
            while(resultSet.next()){
                ArrayList<String> serviceList =  new ArrayList<String>();
                serviceList.add(resultSet.getString("ServiceUnit"));
                serviceList.add(resultSet.getString("ServiceCharge"));
                allServicesList.add(serviceList);
            }
            for(int i=0; i < allServicesList.size(); i++){
                String serUnit = allServicesList.get(i).get(0);
                Statement statement2 = DBconnect.connectToDB().createStatement();
                statement2.execute("SELECT * FROM SoldProducts WHERE InvoiceID = '"+ invoiceID +"' AND ServiceUnit = '"+ serUnit +"'");
                ResultSet resultSetProducts = statement2.getResultSet();
                while(resultSetProducts.next()){
                    ArrayList<String> productList =  new ArrayList<String>();
                    productList.add(resultSetProducts.getString("ProductID"));
                    productList.add(resultSetProducts.getString("Name"));
                    productList.add(resultSetProducts.getString("Price"));
                    productList.add(resultSetProducts.getString("Qnt"));
                    productList.add(resultSetProducts.getString("Total"));
                    productList.add(resultSetProducts.getString("ServiceUnit"));
                    allProductList.add(productList);
                }
            }
            RefrashSerAndProPanel(invoiceID);
        } catch (SQLException ex) {
            Logger.getLogger(Vehicles.class.getName()).log(Level.SEVERE, null, ex);
        }
    } 
    
    public void RemoveProduct(String id, int invoiceID){
        removeProductList.add(id);
        for(int i=0; i < allProductList.size(); i++){
            if(allProductList.get(i).get(0).equals(id)){
                allProductList.remove(i);
            }
        } 
        RefrashSerAndProPanel(invoiceID);
    }
    
    public void UpdateProduct(ArrayList editProduct){
        for(int i=0; i < allProductList.size(); i++){
            if(allProductList.get(i).get(0).equals(editProduct.get(0))){
                allProductList.get(i).set(3, String.valueOf(editProduct.get(3)));
                allProductList.get(i).set(4, String.valueOf(editProduct.get(4)));
            }
        } 
    }
    
    public void RemoveService(String name, int invoiceID){
        for(int i=0; i < allProductList.size(); i++){
            if(allProductList.get(i).get(5).equals(name)){
                JOptionPane.showMessageDialog(null, "First, remove these unit products !", "Remove", JOptionPane.ERROR_MESSAGE);
                break;
            }else{
                removeServiceList.add(name);
                for(int j=0; j < allServicesList.size(); j++){
                    if(allServicesList.get(j).get(0).equals(name)){
                        allServicesList.remove(j);
                    }
                } 
                RefrashSerAndProPanel(invoiceID);
            }
        }
        
        if(allProductList.isEmpty()){
                removeServiceList.add(name);
                for(int j=0; j < allServicesList.size(); j++){
                    if(allServicesList.get(j).get(0).equals(name)){
                        allServicesList.remove(j);
                    }
                } 
                RefrashSerAndProPanel(invoiceID);
        }
    }
    
    public void UpdateService(String name, String charge){
        System.out.println(charge);
        for(int i=0; i < allServicesList.size(); i++){
            if(allServicesList.get(i).get(0).equals(name)){
                allServicesList.get(i).set(1, charge);
            }
        } 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditAndCancelService.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditAndCancelService.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditAndCancelService.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditAndCancelService.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditAndCancelService().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private button.MyButton ActionButton;
    private button.MyButton DepSerCancelButton1;
    private fosalgo.FTextField VehicleRegNo;
    private javax.swing.JLabel dateLable;
    private CustomComponents.MyTextArea description;
    private fosalgo.FTextField invoiceNo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane6;
    private fosalgo.FTextField ownerName;
    private fosalgo.FTextField ownerPhone;
    private javax.swing.JPanel serAndProPanel4;
    private javax.swing.JLabel timeLabel;
    private fosalgo.FTextField vehicleType;
    // End of variables declaration//GEN-END:variables
}
